#+title: Packages.el in org mode
#+PROPERTY: header-args :tangle "~/.doom.d/packages.el" :comments link
#+PROPERTY: comments org

* Doom Comment
#+BEGIN_SRC emacs-lisp
;; -*- no-byte-compile: t; -*-
;;; $DOOMDIR/packages.el

;; To install a package with Doom you must declare them here and run 'doom sync'
;; on the command line, then restart Emacs for the changes to take effect -- or
;; use 'M-x doom/reload'.


;; To install SOME-PACKAGE from MELPA, ELPA or emacsmirror:
;(package! some-package)

;; To install a package directly from a remote git repo, you must specify a
;; `:recipe'. You'll find documentation on what `:recipe' accepts here:
;; https://github.com/raxod502/straight.el#the-recipe-format
;(package! another-package
;  :recipe (:host github :repo "username/repo"))

;; If the package you are trying to install does not contain a PACKAGENAME.el
;; file, or is located in a subdirectory of the repo, you'll need to specify
;; `:files' in the `:recipe':
;(package! this-package
;  :recipe (:host github :repo "username/repo"
;           :files ("some-file.el" "src/lisp/*.el")))

;; If you'd like to disable a package included with Doom, you can do so here
;; with the `:disable' property:
;(package! builtin-package :disable t)

;; You can override the recipe of a built in package without having to specify
;; all the properties for `:recipe'. These will inherit the rest of its recipe
;; from Doom or MELPA/ELPA/Emacsmirror:
;(package! builtin-package :recipe (:nonrecursive t))
;(package! builtin-package-2 :recipe (:repo "myfork/package"))

;; Specify a `:branch' to install a package from a particular branch or tag.
;; This is required for some packages whose default branch isn't 'master' (which
;; our package manager can't deal with; see raxod502/straight.el#279)
;(package! builtin-package :recipe (:branch "develop"))

;; Use `:pin' to specify a particular commit to install.
;(package! builtin-package :pin "1a2b3c4d5e")


;; Doom's packages are pinned to a specific commit and updated from release to
;; release. The `unpin!' macro allows you to unpin single packages...
;(unpin! pinned-package)
;; ...or multiple packages
;(unpin! pinned-package another-pinned-package)
;; ...Or *all* packages (NOT RECOMMENDED; will likely break things)
;(unpin! t)
#+END_SRC

* Packages that I am using
#+BEGIN_SRC emacs-lisp
;; When using org-roam via the `+roam` flag
(package! org-roam-bibtex)
(unpin! org-roam)
(unpin! bibtex-completion helm-bibtex ivy-bibtex) ;; When using bibtex-completion via the `biblio` module
(package! org-drill)
(package! command-log-mode)
(package! org-tree-slide)
(package! ace-jump-mode)
(package! org-ref)
(package! ledger-mode)
(package! org-sidebar)
(package! org-bullets)
(package! ox-reveal)
(package! dap-mode)
(package! leetcode)
(package! simple-httpd)
(package! bookmark+)
(package! tree-sitter)
(package! tree-sitter-langs)
(package! cask) ;; added this while attempted to debug pdf-tools (I still can't fix it)
(package! stickyfunc-enhance)
(package! exec-path-from-shell)
(package! org-brain)                    ;;
(package! polymode)
(package! code-library)
(package! sx)
(package! emacs-sos)                    ;; ask question on stack exchange
(package! howdoyou)                     ;; search for answer
(package! md4rd)                        ;; mode for reddit
(package! hierarchy)                    ;; dependencies of md4rd
(package! elfeed-score)
(package! annotate)
(package! zotxt)
(package! ein)
(package! impatient-mode)
(package! web-beautify)
(package! lispy)
(package! lsp-metals)                   ;; lsp for  scala-mode
(package! benchstat)                    ;;
(package! cfn-mode) ;; cloudformation mode
(package! camcorder)
(package! ob-mermaid)
(package! mermaid-mode)
(package! graphviz-dot-mode)
(package! lsp-pyright)
(package! yankpad)
(package! org-transclusion)
(package! ox-reveal)
(package! default-text-scale)
(package! ox-hugo)
(package! slurm-mode)
(package! org-download)
(package! org-fragtog)
(package! define-word)
(package! powerthesaurus)
(package! slime)
(package! jupyter)
(package! pretty-hydra)
(package! org-transclusion)             ;; or roam-block
(package! org-sticky-header)
(package! org-bookmark-heading)
(package! forge)
(package! vagrant)
(package! ob-restclient)
(package! gif-screencast)
#+END_SRC

** restclient mode
#+BEGIN_SRC emacs-lisp
(package! ob-restclient)
;; (ob-restclient :type git :flavor melpa :host github :repo "alf/ob-restclient.el")
#+END_SRC
** cell mode
#+BEGIN_SRC emacs-lisp
; (package! cell)
#+END_SRC

** org-fc
#+BEGIN_SRC emacs-lisp
;; (package! org-fc :recipe
;;   (:host nil
;;    :files ("awk" "demo.org")
;;    :repo "https://github.com/l3kn/org-fc"))
#+END_SRC

** region-occurrence-highlighter
#+BEGIN_SRC emacs-lisp
(package! region-occurrences-highlighter)
#+END_SRC

** counsel-jq
#+BEGIN_SRC emacs-lisp
(package! counsel-jq)
#+END_SRC

** json-navigator
#+BEGIN_SRC emacs-lisp
;; (package! json-navigator) ;; weird style. don't like the feel when using it.
#+END_SRC


* Packages that I have previously tried.
#+BEGIN_SRC emacs-lisp
;; (package! direx)
;; (package! chart)
;; (package! cell)
;; (package! json-reformat)
;; (package! evil-paredit)
;; (package! jupyter)
;; (package! paredit)
;; (package! paredit-everywhere)
;; (package! dap-lldb)
;; (package! elfeed-goodies)
;; dap-mode is highlighted in pink while other is highlighted in white. Does it mean it always is loaded by doom emacs?
;; (package! pdf-tools) ;; don't install with package! install it with init.el instead
;; (package! gitconfig-mode :disable t)
;; (package! gitignore-mode :disable t)
;; (package! git-modes :pin "433e1c57a63c88855fc41a942e29d7bc8c9c16c7")
;; environment variables managers
;; (package! conda)
;; (package! pyvenv)
;; (package! lispyville)
;; (package! format-all)                   ;; lsp for  scala-mode
;; (package! webfrer -debug)
;; (package! code-cell)
;; (package! ob-scala)
;; (package! bbdb)
;; (package! ox-latex)
;; (package! powershell) ;; buggy
;; (package! synonyms)
;; (package! bookmark-plus)
;; (package! good-scroll) ;; doesn't work
;; (package! smooth-scroll) ;; doesn't work
;; (package! smooth-scrolling) ;; doesn't work
;; (package! yagist) ;; init.el/gists is better
;; (package! citar)
;; (package! zen-mode)
;; (package! lsp-grammarly)
;; (package! eva
;;   :recipe (:host github :repo "meedstrom/eva"
;;            :files (:defaults "assets"  "renv" "*.R" "*.gnuplot")))
;; (package! org-super-links)
;; (package! emacs-everywhere)
;; (package! org-noter)
;; (package! mu4e)
;; (package! org-roam-bibtex
;;   :recipe (:host github :repo "org-roam/org-roam-bibtex"))
#+END_SRC
